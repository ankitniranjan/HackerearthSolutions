#Python3

# Write your code here
from collections import Counter

for _ in range(int(input())):
   a=list(input())    # ['c', 'd', 'e']
   b=list(input())    # ['a', 'b', 'c']

   x=Counter(a)   # {'c': 1, 'd': 1, 'e': 1}
   y=Counter(b)   # {'a': 1, 'b': 1, 'c': 1}
   
   x.subtract(y)    # {'d': 1, 'e': 1, 'c': 0, 'a': -1, 'b': -1}

   print(sum(abs(i) for i in x.values())) # Sum of element in tuple 
   
 
 #Nodejs
 
// Sample code to perform I/O:

process.stdin.resume();
process.stdin.setEncoding("utf-8");
var stdin_input = "";

process.stdin.on("data", function (input) {
    stdin_input += input;                               // Reading input from STDIN
});

process.stdin.on("end", function () {
   main(stdin_input);
});

function main(input) {
   const data = input.toString().split("\n");
   const testCases = parseInt(data[0], 10);

   if (testCases > 0) {
      let counter = 0;

      for (let index = 0; index < testCases; index++) {
         counter++;
         firstEle = data[counter].trim();
         counter++;
         secondEle = data[counter].trim();
         noOfCharToBeRemovedToMakeArraysAnagram(firstEle, secondEle);
      }
   }       
}

function noOfCharToBeRemovedToMakeArraysAnagram(arr1, arr2) {
   const freqCounter1 = {};
   const freqCounter2 = {};
   const unWantedChars = {};
   let result = 0;

   for (const val of arr1) {
      freqCounter1[val] = (freqCounter1[val] || 0) + 1;
   }

   for (const val of arr2) {
      freqCounter2[val] = (freqCounter2[val] || 0) + 1;
   }

   for (const key in freqCounter1) {
      if (!freqCounter2.hasOwnProperty(key)) {
         unWantedChars[key] = freqCounter1[key];
      } else if (freqCounter1[key] !== freqCounter2[key]) {
         unWantedChars[key] = Math.abs(freqCounter1[key] - freqCounter2[key]);
      }
   }

   for (const key in freqCounter2) {
      if ( !unWantedChars.hasOwnProperty(key) && !freqCounter1.hasOwnProperty(key)) {
         unWantedChars[key] = freqCounter2[key];
      }
   }


   for (const key in unWantedChars) {
      result += parseInt(unWantedChars[key], 10);
   }

   process.stdout.write(`${result.toString()}\n`);    // Writing output to STDOUT
}
